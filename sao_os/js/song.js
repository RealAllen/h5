var songContent = '[00:00.00] \n [00:15.00]Catch the Moment\n [00:22.36]咽下叹息还会尝到余味\n [00:26.27]是懊悔 依然残留苦涩\n [00:31.66]太多 想要大声地追问为什么\n [00:36.50]那句话来不及对你说\n [00:40.64]晨辉中利刃正飞落 斩碎宿命\n [00:44.73]无可奈何 惊慌失措\n [00:48.81]就算这一切从头来过\n [00:52.65]我们能相遇么\n [00:56.31]心跳在回拨 尽头是\n [00:59.42]告别这世界时刻\n [01:02.42]你说别回头 握紧我 还等什么\n [01:07.68]无论多少次 愿望成真过\n [01:12.80]坎坷仍那么多\n [01:16.55]时光在捕捉\n [01:18.35]狂奔中的你我呼啸而过\n [01:22.60]此刻一停留就坠落 一错再错\n [01:27.94]我只记得你的笑容 如花闪烁\n [01:34.21]这试炼注定属于我\n [01:36.83]Catch the Moment\n [01:48.21]细数每个幸福悄悄降落\n [01:52.27]难免会 可是害怕未来\n [01:56.38]要渐渐变的爱情的种子\n [01:59.84]仍在心田摇摆 开花结果\n [02:04.64]过去如再能让我选择\n [02:08.25]爱到底不退缩\n [02:12.11]曾经那个我 Tell Me You\n [02:15.13]正诉说 心扉紧锁\n [02:18.09]是你震撼我 唤醒我 心灵角落\n [02:23.42]Just One 那个人\n [02:25.99]心扉开启了 梦想又觉醒了\n [02:32.43]不断地奔走 黑夜中\n [02:35.33]整个我从容不迫\n [02:38.34]灵魂一直是在掉落 有些惶恐\n [02:43.65]如你所知 我曾不在也曾觉得\n [02:50.14]而你会再不属于我\n [02:52.67]我追着你\n [02:53.60]一次又一次 不断前行了\n [02:55.89]就算反反复复曾经爱过\n [02:58.38]纵有一瞬间\n [02:59.59]曾经的遗憾一直在苦恼\n [03:02.09]我不问为什么\n [03:05.25]这一秒活着爱着疼着\n [03:08.89]我和你相遇了 永恒此刻\n [03:27.97]心跳在回拨\n [03:29.65]尽头是 告别这世界时刻\n [03:33.92]你说别回头 握紧我 还等什么\n [03:39.21]无论多少次\n [03:41.83]愿望成真过 坎坷仍那么多\n [03:48.11]时光在捕捉\n [03:49.90]狂奔中的你我呼啸而过\n [03:54.07]此刻一停留就坠落 一错再错\n [03:59.45]我只记得你的笑容 如花闪烁\n [04:05.79]这试炼注定属于我\n [04:08.45]Catch the Moment\n [04:10.95]此刻我不会再错过\n [04:13.41]就和你紧握住此刻\n [04:18.43]Catch the Moment\n'
var songContent1 = '' ;
function parseLyric(text) {
    //将文本分隔成一行一行，存入数组
    var lines = text.split('\n'),
        //用于匹配时间的正则表达式，匹配的结果类似[xx:xx.xx]
        pattern = /\[\d{2}:\d{2}.\d{2}\]/g,
        //保存最终结果的数组
        result = [];
    //去掉不含时间的行
    while (!pattern.test(lines[0])) {
        lines = lines.slice(1);
    };
    //上面用'\n'生成生成数组时，结果中最后一个为空元素，这里将去掉
    lines[lines.length - 1].length === 0 && lines.pop();
    lines.forEach(function(v /*数组元素值*/ , i /*元素索引*/ , a /*数组本身*/ ) {
        //提取出时间[xx:xx.xx]
        var time = v.match(pattern),
            //提取歌词
            value = v.replace(pattern, '');
        //因为一行里面可能有多个时间，所以time有可能是[xx:xx.xx][xx:xx.xx][xx:xx.xx]的形式，需要进一步分隔
        time.forEach(function(v1, i1, a1) {
            //去掉时间里的中括号得到xx:xx.xx
            var t = v1.slice(1, -1).split(':');
            //将结果压入最终数组
            result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);
        });
    });
    //最后将结果数组中的元素按时间大小排序，以便保存之后正常显示歌词
    result.sort(function(a, b) {
        return a[0] - b[0];
    });
    return result;
}

